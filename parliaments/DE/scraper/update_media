#! /usr/bin/env python3

# Update a media directory with -media files corresponding to the
# -data files in a proceedings directory

import logging
logger = logging.getLogger(__name__)

import argparse
from pathlib import Path
import sys

from fetch_media import download_data, get_filename

def update_media_directory(proc_dir, media_dir, force=False):
    for proc in sorted(proc_dir.glob('*-data.xml')):
        basename = proc.name
        period = basename[:2]
        meeting = basename[2:5]
        filename = get_filename(period, meeting)
        if force or not (media_dir / filename).exists():
            logger.debug(f"Loading {period}-{meeting} data into {filename}")
            download_data(period, meeting, media_dir)

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="Update media files corresponding to proceeding XML files.")
    parser.add_argument("proceedings_dir", metavar="proceedings_dir", type=str, nargs='?',
                        help="Proceedings directory (input)")
    parser.add_argument("media_dir", metavar="media_dir", type=str, nargs='?',
                        help="Media directory (output)")
    parser.add_argument("--debug", dest="debug", action="store_true",
                        default=False,
                        help="Display debug messages")
    parser.add_argument("--force", dest="force", action="store_true",
                        default=False,
                        help="Force loading of data for a meeting even if the file already exists")
    args = parser.parse_args()
    if args.media_dir is None or args.proceedings_dir is None:
        parser.print_help()
        sys.exit(1)
    loglevel = logging.INFO
    if args.debug:
        loglevel=logging.DEBUG
    logging.basicConfig(level=loglevel)
    update_media_directory(Path(args.proceedings_dir), Path(args.media_dir), force=args.force)
